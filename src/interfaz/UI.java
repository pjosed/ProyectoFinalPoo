package interfaz;

import core.EstadoAnimo;
import core.Gato;
import core.Services.CrearPuntajeService;
import core.Services.ProblemaServices;
import core.problema.Problema;
import java.io.File;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import java.io.InputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.RowSorter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author arang
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    private ProblemaServices problemaService;
    private Gato gato;
    private String nickname = null;

    public UI() {
        System.out.println("Inicio UI");
        this.problemaService = new ProblemaServices();
        this.gato = Gato.getInstancia();
        initComponents();
        MainPanel.removeAll();
        MainPanel.add(Inicio);
        MainPanel.repaint();
        MainPanel.revalidate();

    }

    private Clip clip;
    private boolean isPlaying = false;
    private int pausePosition = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        MainPanel = new javax.swing.JPanel();
        Inicio = new javax.swing.JPanel();
        botonSonar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Puntuaciones = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Ranking = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Juego = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        gatoLabel = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Problem = new javax.swing.JTextArea();
        Opcion1 = new javax.swing.JButton();
        Opcion2 = new javax.swing.JButton();
        Opcion3 = new javax.swing.JButton();
        Opcion4 = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jLabel8 = new javax.swing.JLabel();
        Creditos = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Tutorial = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        IngresarUsuario = new javax.swing.JPanel();
        nickName = new java.awt.TextField();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        MainPanel.setLayout(new java.awt.CardLayout());

        Inicio.setPreferredSize(new java.awt.Dimension(1152, 648));
        Inicio.setLayout(null);

        botonSonar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonMusica.png"))); // NOI18N
        botonSonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSonarActionPerformed(evt);
            }
        });
        Inicio.add(botonSonar);
        botonSonar.setBounds(1080, 10, 56, 40);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonIniciar.PNG"))); // NOI18N
        jButton1.setText("Iniciar");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Inicio.add(jButton1);
        jButton1.setBounds(180, 360, 190, 70);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonTutorial.PNG"))); // NOI18N
        jButton2.setText("Tutorial");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Inicio.add(jButton2);
        jButton2.setBounds(390, 360, 180, 70);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonCreditos.PNG"))); // NOI18N
        jButton3.setText("Creditos");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Inicio.add(jButton3);
        jButton3.setBounds(840, 360, 180, 70);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonPuntuacion.PNG"))); // NOI18N
        jButton4.setText("Puntuacion");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Inicio.add(jButton4);
        jButton4.setBounds(590, 360, 220, 70);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/InicioMenu.gif"))); // NOI18N
        Inicio.add(jLabel1);
        jLabel1.setBounds(-3, -4, 1160, 660);

        MainPanel.add(Inicio, "card3");

        Puntuaciones.setPreferredSize(new java.awt.Dimension(800, 600));
        Puntuaciones.setLayout(null);

        Ranking.setBackground(new java.awt.Color(0, 0, 0));
        Ranking.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 14)); // NOI18N
        Ranking.setForeground(new java.awt.Color(255, 255, 255));
        Ranking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Puntaje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Ranking.setRowHeight(35);
        Ranking.setSelectionBackground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setViewportView(Ranking);
        if (Ranking.getColumnModel().getColumnCount() > 0) {
            Ranking.getColumnModel().getColumn(0).setResizable(false);
            Ranking.getColumnModel().getColumn(1).setResizable(false);
        }

        Puntuaciones.add(jScrollPane2);
        jScrollPane2.setBounds(150, 130, 770, 370);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonRegresar.PNG"))); // NOI18N
        jButton7.setText("Salir");
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        Puntuaciones.add(jButton7);
        jButton7.setBounds(30, 10, 200, 60);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Puntuacion.gif"))); // NOI18N
        Puntuaciones.add(jLabel6);
        jLabel6.setBounds(-20, 0, 1210, 620);

        MainPanel.add(Puntuaciones, "card2");

        Juego.setPreferredSize(new java.awt.Dimension(800, 600));
        Juego.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(153, 255, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(1154, 680));
        jPanel3.setLayout(null);

        gatoLabel.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(gatoLabel);
        gatoLabel.setBounds(470, 420, 230, 220);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonRegresar.PNG"))); // NOI18N
        jButton5.setText("Salir");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5);
        jButton5.setBounds(40, 40, 200, 60);

        Problem.setEditable(false);
        Problem.setBackground(new java.awt.Color(0, 0, 0));
        Problem.setColumns(10);
        Problem.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Problem.setForeground(new java.awt.Color(255, 255, 255));
        Problem.setLineWrap(true);
        Problem.setRows(3);
        Problem.setWrapStyleWord(true);
        Problem.setBorder(null);
        Problem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Problem.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane4.setViewportView(Problem);

        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(30, 120, 660, 130);

        Opcion1.setForeground(new java.awt.Color(255, 255, 255));
        Opcion1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonOpciones.png"))); // NOI18N
        Opcion1.setText("Opcion1");
        Opcion1.setToolTipText("");
        Opcion1.setBorderPainted(false);
        Opcion1.setContentAreaFilled(false);
        Opcion1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Opcion1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Opcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Opcion1ActionPerformed(evt);
            }
        });
        jPanel3.add(Opcion1);
        Opcion1.setBounds(30, 310, 530, 90);

        Opcion2.setForeground(new java.awt.Color(255, 255, 255));
        Opcion2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonOpciones.png"))); // NOI18N
        Opcion2.setText("Opcion2");
        Opcion2.setBorderPainted(false);
        Opcion2.setContentAreaFilled(false);
        Opcion2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Opcion2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Opcion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Opcion2ActionPerformed(evt);
            }
        });
        jPanel3.add(Opcion2);
        Opcion2.setBounds(600, 310, 530, 90);

        Opcion3.setForeground(new java.awt.Color(255, 255, 255));
        Opcion3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonOpciones.png"))); // NOI18N
        Opcion3.setText("Opcion3");
        Opcion3.setBorderPainted(false);
        Opcion3.setContentAreaFilled(false);
        Opcion3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Opcion3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Opcion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Opcion3ActionPerformed(evt);
            }
        });
        jPanel3.add(Opcion3);
        Opcion3.setBounds(30, 460, 530, 90);

        Opcion4.setForeground(new java.awt.Color(255, 255, 255));
        Opcion4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonOpciones.png"))); // NOI18N
        Opcion4.setText("Opcion4");
        Opcion4.setBorderPainted(false);
        Opcion4.setContentAreaFilled(false);
        Opcion4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Opcion4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Opcion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Opcion4ActionPerformed(evt);
            }
        });
        jPanel3.add(Opcion4);
        Opcion4.setBounds(600, 460, 530, 90);

        jProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBar.setForeground(new java.awt.Color(102, 102, 255));
        jProgressBar.setMaximum(1000);
        jPanel3.add(jProgressBar);
        jProgressBar.setBounds(830, 70, 250, 40);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FondoJuego.gif"))); // NOI18N
        jPanel3.add(jLabel8);
        jLabel8.setBounds(0, -10, 1160, 680);

        Juego.add(jPanel3);
        jPanel3.setBounds(0, 0, 1468, 750);

        MainPanel.add(Juego, "card2");

        Creditos.setPreferredSize(new java.awt.Dimension(800, 600));
        Creditos.setLayout(null);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BotonRegresar.PNG"))); // NOI18N
        jButton8.setText("Salir");
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        Creditos.add(jButton8);
        jButton8.setBounds(50, 30, 200, 70);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Creditos_1.gif"))); // NOI18N
        Creditos.add(jLabel4);
        jLabel4.setBounds(0, -30, 1160, 710);

        MainPanel.add(Creditos, "card2");

        Tutorial.setPreferredSize(new java.awt.Dimension(800, 600));
        Tutorial.setLayout(null);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonEscuchar.PNG"))); // NOI18N
        jButton6.setText("Escuchar");
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Tutorial.add(jButton6);
        jButton6.setBounds(907, 33, 200, 60);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonRegresar.PNG"))); // NOI18N
        jButton9.setText("Exit");
        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        Tutorial.add(jButton9);
        jButton9.setBounds(70, 30, 190, 70);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tutorial.gif"))); // NOI18N
        jLabel3.setPreferredSize(new java.awt.Dimension(1200, 680));
        Tutorial.add(jLabel3);
        jLabel3.setBounds(0, -20, 1190, 690);

        MainPanel.add(Tutorial, "card2");

        IngresarUsuario.setPreferredSize(new java.awt.Dimension(800, 600));
        IngresarUsuario.setLayout(null);

        nickName.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        nickName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nickNameActionPerformed(evt);
            }
        });
        IngresarUsuario.add(nickName);
        nickName.setBounds(670, 320, 350, 40);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonRegresar.PNG"))); // NOI18N
        jButton10.setText("Exit");
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        IngresarUsuario.add(jButton10);
        jButton10.setBounds(40, 30, 190, 70);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BotonJugar_1.PNG"))); // NOI18N
        jButton11.setText("jButton11");
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        IngresarUsuario.add(jButton11);
        jButton11.setBounds(520, 480, 170, 60);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IngresarUsuario.gif"))); // NOI18N
        IngresarUsuario.add(jLabel5);
        jLabel5.setBounds(0, -30, 1390, 710);

        MainPanel.add(IngresarUsuario, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1160, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Creditos);
        MainPanel.repaint();
        MainPanel.revalidate();          // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Tutorial);
        MainPanel.repaint();
        MainPanel.revalidate();
        JTextArea tutorialText = new JTextArea(
                "En este juego debes ayudar al gato, Mr Microfost, a través de diversas situaciones que pondrán a prueba su nivel de ánimo. \n\n"
                + "Jugarás 5 rondas, y por cada ronda verás una situación relacionada a los riesgos informáticos a los cuáles se enfrentará Mr Microfost y por la cuál tú, debes escoger la mejor opción para ayudarlo a lidiar con ella.\n\n"
                + "No existe una respuesta correcta o incorrecta, simplemente respuestas más o menos adecuadas según el contexto. Por cada opción elevarás en una cierta cantidad el estado de ánimo de Mr Microfost, y tu objetivo es mantenerlo mayor o igual al 60%. Dependiendo de qué tan alto mantengas su nivel de ánimo hacia el final del juego, lograrás una mayor puntuación.\n\n"
                + "¡Buena suerte!"
        );
        tutorialText.setLineWrap(true);
        tutorialText.setWrapStyleWord(true);
        tutorialText.setEditable(false);
        Tutorial.add(tutorialText);  // Agregar el texto al panel Tutorial

        tutorialText.setBounds(20, 20, 540, 300); // Ajustar tamaño y posición
        Tutorial.setLayout(null); // Asegurar diseño absoluto
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(IngresarUsuario);
        MainPanel.repaint();
        MainPanel.revalidate();     // TODO add your handling code here:


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        java.awt.EventQueue.invokeLater(() -> {
            this.dispose();
            UI ui = new UI();
            ui.setSize(1152, 690);
            ui.setLocationRelativeTo(null);
            ui.setVisible(true);

        });
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Puntuaciones);
        MainPanel.repaint();
        MainPanel.revalidate();

        // Cambiar apariencia del encabezado
        JTableHeader header = Ranking.getTableHeader();

        DefaultTableModel model = (DefaultTableModel) Ranking.getModel();

        try (FileInputStream file = new FileInputStream(new File("src/files/Ranking.xlsx")); Workbook workbook = new XSSFWorkbook(file)) {

            Sheet sheet = workbook.getSheetAt(0);

            for (Row row : sheet) {
                Cell cell1 = row.getCell(0); // Columna 1
                Cell cell2 = row.getCell(1); // Columna 2
                Object[] fila = {
                    cell1.getStringCellValue(),
                    cell2.getNumericCellValue()
                };

                model.addRow(fila);

            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Crear un TableRowSorter para ordenar las filas
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        Ranking.setRowSorter(sorter);

        // Configurar la ordenación por la segunda columna (Puntaje) en orden descendente
        sorter.setSortKeys(java.util.Collections.singletonList(
                new RowSorter.SortKey(1, javax.swing.SortOrder.DESCENDING))); // Orden descendente

        header.setBackground(java.awt.Color.BLACK); // Fondo del encabezado
        header.setForeground(java.awt.Color.WHITE); // Texto del encabezado
        header.setFont(new java.awt.Font("Rockwell Extra Bold", java.awt.Font.BOLD, 16)); // Fuente del encabezado

    }
    private DefaultTableModel tableModel; // Declarar el modelo de tabla como variable global

    private void initializeScoreTable() {
        // Inicializar el modelo de tabla
        String[] columnNames = {"Usuario", "Puntos"};
        tableModel = new DefaultTableModel(columnNames, 0);
    }

    private void updateScores(String usuario, int puntos) {
        // Agregar nuevos datos de puntuaciones
        tableModel.addRow(new Object[]{usuario, puntos});

        // Ordenar la tabla de puntuaciones de mayor a menor
        tableModel.getDataVector().sort((o1, o2) -> {
            int points1 = (int) ((Vector<?>) o1).get(1);
            int points2 = (int) ((Vector<?>) o2).get(1);
            return Integer.compare(points2, points1); // Ordenar descendente
        });
        tableModel.fireTableDataChanged(); // Notificar cambios en los datos

        JTable table = new JTable(tableModel);
        table.setEnabled(false); // Deshabilitar edición

        JScrollPane scrollPane = new JScrollPane(table); // Agregar scroll a la tabla
        scrollPane.setBounds(20, 20, 300, 150); // Posición y tamaño del scroll pane

        Puntuaciones.setLayout(null);
        Puntuaciones.removeAll(); // Limpiar panel antes de agregar componentes
        Puntuaciones.add(scrollPane);
    }

    private void updateScoresFromExcel() {
        try (InputStream inputStream = new FileInputStream("src/files/Ranking.xlsx")) {
            Workbook workbook = new XSSFWorkbook(inputStream);
            Sheet sheet = workbook.getSheetAt(0); // Usamos la primera hoja

            // Leer los datos existentes en la hoja
            List<String[]> rows = new ArrayList<>();
            for (Row row : sheet) {
                if (row.getRowNum() == 0) {
                    continue; // Salta la fila del encabezado
                }
                String usuario = row.getCell(0).getStringCellValue();
                int puntos = (int) row.getCell(1).getNumericCellValue();
                rows.add(new String[]{usuario, String.valueOf(puntos)});
            }

            // Agregar las filas leídas al modelo de la tabla
            for (String[] row : rows) {
                tableModel.addRow(row);
            }

            // Ordenar la tabla de puntuaciones
            tableModel.getDataVector().sort((o1, o2) -> {
                int points1 = (int) ((Vector<?>) o1).get(1);
                int points2 = (int) ((Vector<?>) o2).get(1);
                return Integer.compare(points2, points1); // Ordenar descendente
            });

            tableModel.fireTableDataChanged(); // Notificar cambios en los datos
        } catch (IOException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        System.out.println("Iniciando la aplicación..."); // Mensaje de prueba
        this.dispose();
        UI ui = new UI();
        ui.setSize(1152, 685);
        ui.setLocationRelativeTo(null);
        ui.setVisible(true);
        System.out.println("Ventana UI debería estar visible ahora"); // Mensaje de prueba        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        this.dispose();
        UI ui = new UI();
        ui.setSize(1152, 660);
        ui.setLocationRelativeTo(null);
        ui.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        this.dispose();
        UI ui = new UI();
        ui.setSize(1152, 690);
        ui.setLocationRelativeTo(null);
        ui.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        this.dispose();
        UI ui = new UI();
        ui.setSize(1152, 690);
        ui.setLocationRelativeTo(null);
        ui.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void Opcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Opcion1ActionPerformed
        if (this.problemaService.lessThanFive()) {
            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion1.getClientProperty("Explanation"));
            this.gato.setPuntaje((int) this.gato.getPuntaje() + (int) Opcion1.getClientProperty("Valor"));
            this.gato.cambiarEstado();
            jProgressBar.setValue(gato.getPuntaje());
            PonerGato();
            Problema problema = this.problemaService.leerProblema();

            Problem.setText(problema.getTextoProblema());
            Opcion1.setText(problema.getOpciones().get(0).getDescripcion());
            Opcion1.putClientProperty("Valor", problema.getOpciones().get(0).getPuntaje());
            Opcion2.setText(problema.getOpciones().get(1).getDescripcion());
            Opcion2.putClientProperty("Valor", problema.getOpciones().get(1).getPuntaje());
            Opcion3.setText(problema.getOpciones().get(2).getDescripcion());
            Opcion3.putClientProperty("Valor", problema.getOpciones().get(2).getPuntaje());
            Opcion4.setText(problema.getOpciones().get(3).getDescripcion());
            Opcion4.putClientProperty("Valor", problema.getOpciones().get(3).getPuntaje());
        } else {
            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion1.getClientProperty("Explanation"));

            JOptionPane.showMessageDialog(null, this.nickname + ", tu puntaje esta vez fue de: " + this.gato.getPuntaje() + ". No te canses de intentar y de convertirte en un pro en aconsejar a Mr. Microfost.");
            CrearPuntajeService.CreaPuntaje(this.nickname, this.gato.getPuntaje());
            java.awt.EventQueue.invokeLater(() -> {
                this.dispose();
                UI ui = new UI();
                ui.setSize(1152, 690);
                ui.setLocationRelativeTo(null);
                ui.setVisible(true);

            });
        }


    }//GEN-LAST:event_Opcion1ActionPerformed

    private void Opcion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Opcion2ActionPerformed
        if (this.problemaService.lessThanFive()) {
            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion2.getClientProperty("Explanation"));

            this.gato.setPuntaje((int) this.gato.getPuntaje() + (int) Opcion2.getClientProperty("Valor"));
            this.gato.cambiarEstado();
            jProgressBar.setValue(gato.getPuntaje());
            PonerGato();
            Problema problema = this.problemaService.leerProblema();

            Problem.setText(problema.getTextoProblema());
            Opcion1.setText(problema.getOpciones().get(0).getDescripcion());
            Opcion1.putClientProperty("Valor", problema.getOpciones().get(0).getPuntaje());
            Opcion2.setText(problema.getOpciones().get(1).getDescripcion());
            Opcion2.putClientProperty("Valor", problema.getOpciones().get(1).getPuntaje());
            Opcion3.setText(problema.getOpciones().get(2).getDescripcion());
            Opcion3.putClientProperty("Valor", problema.getOpciones().get(2).getPuntaje());
            Opcion4.setText(problema.getOpciones().get(3).getDescripcion());
            Opcion4.putClientProperty("Valor", problema.getOpciones().get(3).getPuntaje());
        } else {
            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion1.getClientProperty("Explanation"));

            JOptionPane.showMessageDialog(null, this.nickname + ", tu puntaje esta vez fue de: " + this.gato.getPuntaje() + ". No te canses de intentar y de convertirte en un pro en aconsejar a Mr. Microfost.");
            CrearPuntajeService.CreaPuntaje(this.nickname, this.gato.getPuntaje());
            java.awt.EventQueue.invokeLater(() -> {
                this.dispose();
                UI ui = new UI();
                ui.setSize(1152, 690);
                ui.setLocationRelativeTo(null);
                ui.setVisible(true);

            });
        }
    }//GEN-LAST:event_Opcion2ActionPerformed

    private void Opcion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Opcion3ActionPerformed
        if (this.problemaService.lessThanFive()) {
            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion1.getClientProperty("Explanation"));

            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion3.getClientProperty("Explanation"));

            this.gato.setPuntaje((int) this.gato.getPuntaje() + (int) Opcion3.getClientProperty("Valor"));
            this.gato.cambiarEstado();
            jProgressBar.setValue(gato.getPuntaje());
            PonerGato();
            Problema problema = this.problemaService.leerProblema();

            Problem.setText(problema.getTextoProblema());
            Opcion1.setText(problema.getOpciones().get(0).getDescripcion());
            Opcion1.putClientProperty("Valor", problema.getOpciones().get(0).getPuntaje());
            Opcion2.setText(problema.getOpciones().get(1).getDescripcion());
            Opcion2.putClientProperty("Valor", problema.getOpciones().get(1).getPuntaje());
            Opcion3.setText(problema.getOpciones().get(2).getDescripcion());
            Opcion3.putClientProperty("Valor", problema.getOpciones().get(2).getPuntaje());
            Opcion4.setText(problema.getOpciones().get(3).getDescripcion());
            Opcion4.putClientProperty("Valor", problema.getOpciones().get(3).getPuntaje());
        } else {
            JOptionPane.showMessageDialog(null, this.nickname + ", tu puntaje esta vez fue de: " + this.gato.getPuntaje() + ". No te canses de intentar y de convertirte en un pro en aconsejar a Mr. Microfost.");
            CrearPuntajeService.CreaPuntaje(this.nickname, this.gato.getPuntaje());

            java.awt.EventQueue.invokeLater(() -> {
                this.dispose();
                UI ui = new UI();
                ui.setSize(1152, 690);
                ui.setLocationRelativeTo(null);
                ui.setVisible(true);

            });
        }
    }//GEN-LAST:event_Opcion3ActionPerformed

    private void Opcion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Opcion4ActionPerformed
        if (this.problemaService.lessThanFive()) {
            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion1.getClientProperty("Explanation"));

            JOptionPane.showMessageDialog(null, this.nickname + ", " + Opcion4.getClientProperty("Explanation"));

            this.gato.setPuntaje((int) this.gato.getPuntaje() + (int) Opcion4.getClientProperty("Valor"));
            this.gato.cambiarEstado();
            jProgressBar.setValue(gato.getPuntaje());
            PonerGato();
            Problema problema = this.problemaService.leerProblema();

            Problem.setText(problema.getTextoProblema());
            Opcion1.setText(problema.getOpciones().get(0).getDescripcion());
            Opcion1.putClientProperty("Valor", problema.getOpciones().get(0).getPuntaje());
            Opcion2.setText(problema.getOpciones().get(1).getDescripcion());
            Opcion2.putClientProperty("Valor", problema.getOpciones().get(1).getPuntaje());
            Opcion3.setText(problema.getOpciones().get(2).getDescripcion());
            Opcion3.putClientProperty("Valor", problema.getOpciones().get(2).getPuntaje());
            Opcion4.setText(problema.getOpciones().get(3).getDescripcion());
            Opcion4.putClientProperty("Valor", problema.getOpciones().get(3).getPuntaje());
        } else {
            JOptionPane.showMessageDialog(null, this.nickname + ", tu puntaje esta vez fue de: " + this.gato.getPuntaje() + ". No te canses de intentar y de convertirte en un pro en aconsejar a Mr. Microfost.");
            CrearPuntajeService.CreaPuntaje(this.nickname, this.gato.getPuntaje());

            java.awt.EventQueue.invokeLater(() -> {
                this.dispose();
                UI ui = new UI();
                ui.setSize(1152, 690);
                ui.setLocationRelativeTo(null);
                ui.setVisible(true);

            });
        }
    }//GEN-LAST:event_Opcion4ActionPerformed

    private void nickNameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private final ImageIcon gatoFeliz = new ImageIcon("src/files/GatoFeliz.png");
    private final ImageIcon gatoNormal = new ImageIcon("src/files/GatoNormal.png");
    private final ImageIcon gatoTriste = new ImageIcon("src/files/GatoTriste.png");

    private void PonerGato() {
        this.gato = Gato.getInstancia();
        if (gato.getEstadoAnimo() == EstadoAnimo.feliz) {
            gatoLabel.setIcon(gatoFeliz);
        } else if (gato.getEstadoAnimo() == EstadoAnimo.normal) {
            gatoLabel.setIcon(gatoNormal);
        } else if (gato.getEstadoAnimo() == EstadoAnimo.triste) {
            gatoLabel.setIcon(gatoTriste);
        }
    }
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        this.nickname = nickName.getText();
        this.problemaService = new ProblemaServices();
        MainPanel.removeAll();
        MainPanel.add(Juego);
        MainPanel.repaint();
        MainPanel.revalidate();

        this.gato = Gato.getInstancia();

        jProgressBar.setValue(gato.getPuntaje());
        PonerGato();

        // TODO add your handling code here:
        int id = 0; // ID seleccionado al azar

        Problema problema = problemaService.leerProblema();

        Problem.setText(problema.getTextoProblema());
        Opcion1.setText(problema.getOpciones().get(0).getDescripcion());
        Opcion1.putClientProperty("Valor", problema.getOpciones().get(0).getPuntaje());
        Opcion1.putClientProperty("Explanation", problema.getOpciones().get(0).getExplicacion());
        Opcion2.setText(problema.getOpciones().get(1).getDescripcion());
        Opcion2.putClientProperty("Valor", problema.getOpciones().get(1).getPuntaje());
        Opcion2.putClientProperty("Explanation", problema.getOpciones().get(1).getExplicacion());
        Opcion3.setText(problema.getOpciones().get(2).getDescripcion());
        Opcion3.putClientProperty("Valor", problema.getOpciones().get(2).getPuntaje());
        Opcion3.putClientProperty("Explanation", problema.getOpciones().get(2).getExplicacion());
        Opcion4.setText(problema.getOpciones().get(3).getDescripcion());
        Opcion4.putClientProperty("Valor", problema.getOpciones().get(3).getPuntaje());
        Opcion4.putClientProperty("Explanation", problema.getOpciones().get(3).getExplicacion());
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            if (clip == null) {
                // Cargar el archivo de audio desde los recursos del proyecto 
                InputStream audioSrc = getClass().getResourceAsStream("/files/audioTutorial.wav");
                AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioSrc);

                // Crear un clip para reproducir el audio 
                clip = AudioSystem.getClip();
                clip.open(audioStream);
            }

            if (isPlaying) {
                // Pausar el audio 
                pausePosition = clip.getFramePosition();
                clip.stop();
            } else {
                // Reanudar el audio desde la posición pausada 
                clip.setFramePosition(pausePosition);
                clip.start();
            }
            // Cambiar el estado del audio 
            isPlaying = !isPlaying;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void botonSonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSonarActionPerformed
        try {
            if (clip == null) {
                // Cargar el archivo de audio desde los recursos del proyecto 
                InputStream audioSrc = getClass().getResourceAsStream("/files/HoldingOutForAHero.wav");
                AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioSrc);

                // Crear un clip para reproducir el audio 
                clip = AudioSystem.getClip();
                clip.open(audioStream);
            }

            if (isPlaying) {
                // Pausar el audio 
                pausePosition = clip.getFramePosition();
                clip.stop();
            } else {
                // Reanudar el audio desde la posición pausada 
                clip.setFramePosition(pausePosition);
                clip.start();
            }
            // Cambiar el estado del audio 
            isPlaying = !isPlaying;
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_botonSonarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Creditos;
    private javax.swing.JPanel IngresarUsuario;
    private javax.swing.JPanel Inicio;
    private javax.swing.JPanel Juego;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton Opcion1;
    private javax.swing.JButton Opcion2;
    private javax.swing.JButton Opcion3;
    private javax.swing.JButton Opcion4;
    private javax.swing.JTextArea Problem;
    private javax.swing.JPanel Puntuaciones;
    private javax.swing.JTable Ranking;
    private javax.swing.JPanel Tutorial;
    private javax.swing.JButton botonSonar;
    private javax.swing.JLabel gatoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private java.awt.TextField nickName;
    // End of variables declaration//GEN-END:variables
}
